// Script para el popup de la extensi√≥n
document.addEventListener('DOMContentLoaded', function() {
  const toggleButton = document.getElementById('toggleButton');
  const statusDiv = document.getElementById('status');
  const saveApiKeyBtn = document.getElementById('saveApiKey');
  const apiKeyInput = document.getElementById('apiKeyInput');

  // ‚úÖ Cargar estado actual al abrir popup
  loadCurrentState();

  // ‚úÖ Cargar API Key guardada y mostrar placeholder si ya existe
  chrome.storage.local.get(['geminiApiKey'], function(result) {
    if (result.geminiApiKey) {
      apiKeyInput.placeholder = 'API Key ya configurada';
    }
  });

  // ‚úÖ Guardar API Key al hacer clic en el bot√≥n
  saveApiKeyBtn.addEventListener('click', function() {
    const apiKey = apiKeyInput.value.trim();

    if (apiKey) {
      chrome.storage.local.set({ geminiApiKey: apiKey }, function() {
        alert('API Key guardada correctamente ‚úÖ');
        apiKeyInput.value = '';
        apiKeyInput.placeholder = 'API Key ya configurada';
        checkCursorConnection(); // refresca estado
      });
    } else {
      alert('Por favor ingresa una API Key v√°lida ‚ùó');
    }
  });

  // ‚úÖ Bot√≥n toggle para activar/desactivar modo selecci√≥n
  toggleButton.addEventListener('click', function() {
    chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {
      if (tabs[0] && tabs[0].id) {
        chrome.tabs.sendMessage(tabs[0].id, {action: 'toggleSelection'}, function(response) {
          if (chrome.runtime.lastError) {
            console.error('Error:', chrome.runtime.lastError);
            statusDiv.textContent = '‚ö†Ô∏è Error: Recarga la p√°gina';
            statusDiv.className = 'status disconnected';
          } else {
            // Actualizar estado local despu√©s de un momento
            setTimeout(loadCurrentState, 100);
          }
        });
      }
    });
  });

  // ‚úÖ Verificar conexi√≥n peri√≥dicamente
  setInterval(checkCursorConnection, 2000);
});

// üîÑ Funci√≥n para cargar estado actual desde storage
function loadCurrentState() {
  const toggleButton = document.getElementById('toggleButton');
  const statusDiv = document.getElementById('status');
  
  chrome.storage.local.get(['isEnabled'], function(result) {
    if (result.isEnabled) {
      toggleButton.classList.add('active');
      statusDiv.textContent = '‚úÖ Modo selecci√≥n ACTIVADO';
      statusDiv.className = 'status connected';
    } else {
      toggleButton.classList.remove('active');
      statusDiv.textContent = 'üî¥ Modo selecci√≥n DESACTIVADO';
      statusDiv.className = 'status disconnected';
    }
  });
}

// üîç Verificar conexi√≥n con Cursor y si API Key est√° configurada
function checkCursorConnection() {
  const statusDiv = document.getElementById('status');
  if (!statusDiv) return;
  
  chrome.storage.local.get(['geminiApiKey', 'isEnabled'], function(result) {
    if (!result.geminiApiKey) {
      statusDiv.textContent = 'üîë Configura API Key';
      statusDiv.className = 'status disconnected';
    } else if (result.isEnabled) {
      statusDiv.textContent = '‚úÖ Modo selecci√≥n ACTIVADO';
      statusDiv.className = 'status connected';
    } else {
      statusDiv.textContent = 'üî¥ Modo selecci√≥n DESACTIVADO';
      statusDiv.className = 'status disconnected';
    }
  });
}


